:root {
    --font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono',
    'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',
    'Fira Mono', 'Droid Sans Mono', 'Courier New', monospace;

    --background-color: #FEFEFE;
    --on-background-color: #EFEFEF;
    --input-color: #DDDDDD;
    --accent-color: #e7bf26;
}

@media (prefers-color-scheme: dark) {
    :root {
        --background-color: #333333;
        --on-background-color: #222222;
        --input-color: #777777;
    }

    .gameTile:not(.canPlace, .red, .yellow)::after {
        filter: brightness(30%);
    }

    .gameTile.canPlace:hover::after {
        filter: brightness(130%);
    }

    html {
        color-scheme: dark;
    }
}

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

html,
body {
    max-width: 100vw;
    overflow-x: hidden;
}

body {
    background-color: var(--background-color);
    width: 100%;
    height: 100%;
}

a {
    color: inherit;
    text-decoration: none;
}

h1 {
    font-size: 2.5em;
    padding: 0.25rem;
}

h1 + hr {
    width: 100%;
    color: var(--accent-color);
    background-color: var(--accent-color);
    border: 2px solid var(--accent-color);
    border-radius: 5px;
}

main {
    align-items: center;
    padding: 1rem;
    min-height: 100dvh;
    min-width: 100%;

    display: flex;
    justify-content: center;
    flex-direction: column;
    gap: 1rem;
}

.input-form {
    /*border: 2px solid #555555;*/
    box-shadow: 0 2px 10px black;
    border-radius: 16px;
    padding: 36px;
    background-color: var(--on-background-color);

    width: clamp(300px, 40%, 500px);
    height: auto;

    display: flex;
    flex-direction: column;
    gap: 2.5rem;
}

.input-form > form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: center;
}

.input-form form h3 {
    padding: 4px;

    font-size: 1.5rem;
    width: 100%;
    text-align: center;
    border-bottom: 2px solid #999999;
}

label {
    display: flex;
    flex-direction: column;
    font-size: 1.25rem;
    width: 100%;
}

.basic-button {
    padding: 16px;
    width: 100%;
    position: relative;
    isolation: isolate;
    overflow: hidden;

    font-size: 1.25rem;
    border: 2px solid #555555;
    border-radius: 8px;
    background-color: var(--on-background-color);
    box-shadow: 0 2px 4px black;
}

.basic-button::after {
    content: '';
    position: absolute;
    border-radius: 50%;
    width: 100%;
    aspect-ratio: 1;
    inset: 0;
    margin: auto;
    z-index: -1;

    background-color: var(--accent-color);
    scale: 0;

    transition: scale 300ms;
}

.basic-button:not(:disabled) {
    cursor: pointer;
}

.basic-button:not(:disabled):hover::after,
.basic-button:not(:disabled):focus-visible::after {
    scale: 1.2;
}

input {
    padding: 8px;
    width: 100%;
    position: relative;

    font-size: 1.35rem;
    border: 2px solid #555555;
    border-radius: 8px;
    background-color: var(--input-color);
    box-shadow: 0 2px 4px black;
}

.gameBoard {
    --size: clamp(50px, min(10dvw, 10dvh), 150px);
    --rows: 6;
    --columns: 7;

    display: grid;
    grid: repeat(var(--rows), var(--size)) / repeat(var(--columns), var(--size));

    border: none;
    box-shadow: 0 2px 10px black;
    border-radius: 16px;
    padding: 12px;
    background-color: var(--on-background-color);
}

.gameTile {
    position: relative;

    height: 100%;
    width: 100%;
    margin: auto;
    z-index: 1;

    border: none;
    background-color: transparent;
}

.gameTile::before {
    content: '';
    inset: 10%;
    position: absolute;
    background-color: var(--background-color);
    border-radius: 50%;
    z-index: -2;

    transition: filter 250ms;
}

.gameTile::after {
    content: '';
    inset: 10%;
    position: absolute;
    background-color: var(--background-color);
    border-radius: 50%;
    z-index: 2;

    transition: filter 250ms;
}

.gameTile:not(.canPlace, .red, .yellow)::after {
    filter: brightness(80%);
}

.gameTile.canPlace {
    cursor: pointer;
}

.gameTile.red::after {
    background-color: red;
}

.gameTile.yellow::after {
    background-color: gold;
}

.gameTile.canPlace:hover::after {
    filter: brightness(90%);
}

.fall::after {
    animation: fall 500ms ease-in forwards, fade-in 100ms ease-in forwards;
}

.fallFar::after {
    animation: fall-far 1000ms ease-in forwards;
}

@keyframes fade-in {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fall {
    from {
        transform: translateY(-800%);
    }

    to {
        transform: translateY(0);
    }
}

@keyframes fall-far {
    from {
        transform: translateY(0);
    }

    to {
        transform: translateY(100dvh);
    }
}

#play-again {
    max-width: 20rem;
}

#loading[open] {
    position: absolute;
    left: 50%;
    top: 50%;
    translate: -50% -50%;
    min-width: 25rem;
    width: 25%;
    max-width: 35rem;
    height: 25%;
    min-height: 18rem;
    isolation: isolate;
    z-index: 99;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 15%;

    background: var(--on-background-color);
    box-shadow: 0 0 20px black;
    padding: 1rem;
    border-radius: 0.5rem;
    border: none;
    outline: none;
}

#loading p {
    font-size: 2rem;
    z-index: 99;
}

.loading-bar {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 1rem;
}

.loading-bar span {
    --size: 5rem;
    --color: black;
    --animation-delay: 0ms;

    width: var(--size);
    height: var(--size);
    display: inline-block;

    border-radius: 50%;
    background: var(--color);

    animation: loading 2000ms var(--animation-delay) ease-in-out infinite;
}

@keyframes loading {
    0% {
        opacity: 0;
        translate: 0 -100%;
        scale: 0.5;
    }

    15% {
        opacity: 0;
        translate: 0 -100%;
        scale: 0.5;
    }

    33% {
        opacity: 1;
        translate: 0 0;
        scale: 1;
    }

    66% {
        opacity: 1;
        translate: 0;
        scale: 1;
    }

    85% {
        opacity: 0;
        translate: 0 100%;
        scale: 0.5;
    }

    100% {
        opacity: 0;
        translate: 0 100%;
        scale: 0.5;
    }
}